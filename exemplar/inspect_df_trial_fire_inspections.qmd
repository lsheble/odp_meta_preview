---
title: "Fire inspections data set overview"
format:
  html:
    code-fold: true
    df-print: paged
---



```{r} 
#| label: load-libraries
#| output: false
#| warning: false
library(readr)
library(inspectdf)
library(stringr)
library(forcats)
library(dplyr)
library(ggplot2)
#library(ggsankey)
#library(lubridate)

```


Fire Inspections data was downloaded in csv format from the ODP on Oct 10, 2020 to obtain a snapshot of published data after completion of the entire data processing pipeline.



```{r}
#| label: load-fire-inspect-data
inspections <- read_csv("data/Fire_Inspections_20221010.csv",
    col_types = cols(X = col_double(), 
                     Y = col_double(), 
                     IO_ID = col_character(), 
                     Address = col_character(), 
                     OccupantName = col_character(), 
                     StructureName = col_character(),
                     InspectionType_Full = col_factor(),
                     LatestInspDate = col_datetime(format = "%Y/%m/%d %H:%M:%S+00"),
                     InspWithinLastYear = col_factor(),
                     address_id = col_character(), 
                     lon = col_double(), 
                     lat = col_double(), 
                     ObjectId = col_character(), 
                     propusetype = col_factor(), 
                     propusetypedescription = col_factor(),
                     zip = col_factor()))

```



## Dimensions and variables

The imported data set includes `r ncol(inspections)` variables and `r nrow(inspections)` annual inspection records. Nine variables originate in the ingested data, and seven (X, Y, InspWithinLastYear, address_id, lon, lat, ObjectId) from data enrichment and processing activities.

```{r}
inspections
```

When imported, variables in the data set were assigned data types based on constituent data. Though fundamentally a logical variable, 'InspWithinLastYear' was treated as a factor to retain display of the labels 'Yes' and 'No'.

```{r}
#| label: data-types
inspect_types(inspections) %>% show_plot()
```



### Null value prevalence

```{r}
#| Label: null-overview
inspect_na(inspections) %>% show_plot()
```



```{r}
# Remove 'ANNUAL ' from InspectionType_Full text strings for chart and plot
tmp_inspections <- inspections
tmp_inspections$InspectionType_Full <- str_sub(tmp_inspections$InspectionType_Full, 8, -1)
tmp_inspections %>% count(InspectionType_Full, sort=TRUE)

```


```{r}
ggplot(tmp_inspections, aes(x = fct_infreq(InspectionType_Full))) + 
  geom_bar() + labs(x="Annual Inspection Type", y="Count") + coord_flip()
```



```{r}
inspections %>% count(propusetype, sort=TRUE)


```


```{r}
ggplot(inspections, aes(x = fct_infreq(propusetypedescription))) + 
  geom_bar() + coord_flip()
```



```{r}
inspections %>% count(propusetypedescription, sort=TRUE)
```

```{r}
inspections %>% count(InspWithinLastYear, sort=TRUE)
ggplot(inspections, aes(x = fct_infreq(InspWithinLastYear))) + 
  geom_bar()
```


```{r}
# Need to bin by month or year - this is unbinned
# inspections %>% select(LatestInspDate)
# ggplot(inspections, aes(x=LatestInspDate)) + stat_count(geom='point')
```



```{r}
inspect_imb(inspections) %>% show_plot()
```


```{r}
inspect_cat(inspections)
```


```{r}
inspections %>% distinct(propusetype, propusetypedescription)  #%>% select(PropUseType, PropUseTypeDescription)
```


```{r}
inspections %>% arrange(propusetype) %>% distinct(propusetypedescription) %>% arrange(.by_group = TRUE)
```

